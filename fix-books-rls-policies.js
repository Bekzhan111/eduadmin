require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

async function fixBooksRLSPolicies() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã books...');
  
  try {
    const serviceClient = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
    );
    
    console.log('üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª–∏—Ç–∏–∫ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã books');
    
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è books
    const dropPoliciesSQL = `
      -- –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã books
      DROP POLICY IF EXISTS "books_select_policy" ON books;
      DROP POLICY IF EXISTS "books_insert_policy" ON books;
      DROP POLICY IF EXISTS "books_update_policy" ON books;
      DROP POLICY IF EXISTS "books_delete_policy" ON books;
      DROP POLICY IF EXISTS "Enable select for authors" ON books;
      DROP POLICY IF EXISTS "Enable select for moderators" ON books;
      DROP POLICY IF EXISTS "Enable select for all users" ON books;
      DROP POLICY IF EXISTS "Enable insert for authors" ON books;
      DROP POLICY IF EXISTS "Enable update for authors and moderators" ON books;
      DROP POLICY IF EXISTS "Enable delete for authors" ON books;
      
      -- –í–∫–ª—é—á–∞–µ–º RLS –µ—Å–ª–∏ –æ–Ω –Ω–µ –≤–∫–ª—é—á–µ–Ω
      ALTER TABLE books ENABLE ROW LEVEL SECURITY;
    `;
    
    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏...');
    const { error: dropError } = await serviceClient.rpc('sql', { query: dropPoliciesSQL });
    
    if (dropError) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª–∏—Ç–∏–∫ (–≤–æ–∑–º–æ–∂–Ω–æ, –∏—Ö –Ω–µ –±—ã–ª–æ):', dropError.message);
    } else {
      console.log('‚úÖ –°—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ —É–¥–∞–ª–µ–Ω—ã');
    }
    
    console.log('\nüìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö RLS –ø–æ–ª–∏—Ç–∏–∫');
    
    const createPoliciesSQL = `
      -- –ü–æ–ª–∏—Ç–∏–∫–∞ SELECT: —Ä–∞–∑–Ω—ã–µ —Ä–æ–ª–∏ –≤–∏–¥—è—Ç —Ä–∞–∑–Ω—ã–µ –∫–Ω–∏–≥–∏
      CREATE POLICY "books_select_policy" ON books FOR SELECT USING (
        CASE 
          -- –ê–≤—Ç–æ—Ä—ã –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∫–Ω–∏–≥–∏
          WHEN (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'author' 
          THEN author_id = auth.uid()
          
          -- –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –≤–∏–¥—è—Ç –≤—Å–µ –∫–Ω–∏–≥–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ "Moderation"
          WHEN (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'moderator' 
          THEN status = 'Moderation'
          
          -- –°—É–ø–µ—Ä –∞–¥–º–∏–Ω—ã –≤–∏–¥—è—Ç –≤—Å–µ –∫–Ω–∏–≥–∏
          WHEN (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'super_admin' 
          THEN true
          
          -- –®–∫–æ–ª—ã, —É—á–∏—Ç–µ–ª—è, —Å—Ç—É–¥–µ–Ω—Ç—ã –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–∏–≥–∏
          WHEN (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) IN ('school', 'teacher', 'student') 
          THEN status = 'Active'
          
          -- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–∏–≥–∏
          ELSE status = 'Active'
        END
      );
      
      -- –ü–æ–ª–∏—Ç–∏–∫–∞ INSERT: —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–Ω–∏–≥–∏
      CREATE POLICY "books_insert_policy" ON books FOR INSERT WITH CHECK (
        (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'author' 
        AND author_id = auth.uid()
      );
      
      -- –ü–æ–ª–∏—Ç–∏–∫–∞ UPDATE: –∞–≤—Ç–æ—Ä—ã –æ–±–Ω–æ–≤–ª—è—é—Ç —Å–≤–æ–∏ –∫–Ω–∏–≥–∏, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã - —Å—Ç–∞—Ç—É—Å
      CREATE POLICY "books_update_policy" ON books FOR UPDATE USING (
        CASE 
          -- –ê–≤—Ç–æ—Ä—ã –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–≤–æ–∏ –∫–Ω–∏–≥–∏
          WHEN (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'author' 
          THEN author_id = auth.uid()
          
          -- –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å –∫–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
          WHEN (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'moderator' 
          THEN status = 'Moderation'
          
          -- –°—É–ø–µ—Ä –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å –≤—Å–µ
          WHEN (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'super_admin' 
          THEN true
          
          ELSE false
        END
      );
      
      -- –ü–æ–ª–∏—Ç–∏–∫–∞ DELETE: —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä—ã –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å —Å–≤–æ–∏ –∫–Ω–∏–≥–∏
      CREATE POLICY "books_delete_policy" ON books FOR DELETE USING (
        (SELECT role FROM auth.users() JOIN users ON auth.users().id = users.id) = 'author' 
        AND author_id = auth.uid()
      );
    `;
    
    console.log('üî® –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏...');
    const { error: createError } = await serviceClient.rpc('sql', { query: createPoliciesSQL });
    
    if (createError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫:', createError.message);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é
      console.log('\nüîÑ –ü—Ä–æ–±—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –ø–æ–ª–∏—Ç–∏–∫...');
      
      const simplePoliciesSQL = `
        -- –ü—Ä–æ—Å—Ç–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ SELECT –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
        CREATE POLICY "moderators_see_moderation" ON books FOR SELECT USING (
          EXISTS (
            SELECT 1 FROM users 
            WHERE users.id = auth.uid() 
            AND users.role = 'moderator'
          ) AND status = 'Moderation'
        );
        
        -- –ü—Ä–æ—Å—Ç–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ SELECT –¥–ª—è –∞–≤—Ç–æ—Ä–æ–≤
        CREATE POLICY "authors_see_own" ON books FOR SELECT USING (
          EXISTS (
            SELECT 1 FROM users 
            WHERE users.id = auth.uid() 
            AND users.role = 'author'
          ) AND author_id = auth.uid()
        );
        
        -- –ü—Ä–æ—Å—Ç–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ SELECT –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        CREATE POLICY "users_see_active" ON books FOR SELECT USING (
          status = 'Active'
        );
        
        -- –ü–æ–ª–∏—Ç–∏–∫–∞ INSERT –¥–ª—è –∞–≤—Ç–æ—Ä–æ–≤
        CREATE POLICY "authors_insert" ON books FOR INSERT WITH CHECK (
          EXISTS (
            SELECT 1 FROM users 
            WHERE users.id = auth.uid() 
            AND users.role = 'author'
          ) AND author_id = auth.uid()
        );
      `;
      
      const { error: simpleError } = await serviceClient.rpc('sql', { query: simplePoliciesSQL });
      
      if (simpleError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–ø—Ä–æ—â–µ–Ω–Ω—ã—Ö –ø–æ–ª–∏—Ç–∏–∫:', simpleError.message);
        return;
      } else {
        console.log('‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
      }
    } else {
      console.log('‚úÖ –ù–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
    }
    
    console.log('\nüìã –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–∏—Ç–∏–∫');
    
    // –°–æ–∑–¥–∞–µ–º anon –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const anonClient = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    );
    
    // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    const { data: moderators, error: modError } = await serviceClient
      .from('users')
      .select('id, email, role')
      .eq('role', 'moderator')
      .limit(1);
    
    if (modError || !moderators || moderators.length === 0) {
      console.log('‚ùå –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const moderator = moderators[0];
    console.log('üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º:', moderator.email);
    
    // –í—Ö–æ–¥–∏–º –∫–∞–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
    const { data: authData, error: authError } = await anonClient.auth.signInWithPassword({
      email: moderator.email,
      password: 'TestPassword123' // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å
    });
    
    if (authError) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –∫–∞–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä:', authError.message);
      return;
    }
    
    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–Ω–∏–≥–∞–º
    const { data: booksData, error: booksError } = await anonClient
      .from('books')
      .select('id, title, status')
      .eq('status', 'Moderation');
    
    if (booksError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫:', booksError.message);
    } else {
      console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç! –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç –∫–Ω–∏–≥:', booksData?.length || 0);
      
      if (booksData && booksData.length > 0) {
        console.log('\nüéâ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!');
        console.log('üìö –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç –∫–Ω–∏–≥–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:');
        booksData.slice(0, 3).forEach((book, index) => {
          console.log(`   ${index + 1}. "${book.title}"`);
        });
      }
    }
    
    // –í—ã—Ö–æ–¥–∏–º
    await anonClient.auth.signOut();
    
    console.log('\n‚úÖ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
    console.log('üí° –¢–µ–ø–µ—Ä—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è RLS –ø–æ–ª–∏—Ç–∏–∫:', error instanceof Error ? error.message : String(error));
  }
}

fixBooksRLSPolicies(); 
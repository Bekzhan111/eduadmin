require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

async function temporaryDisableRLS() {
  console.log('‚ö†Ô∏è –í–†–ï–ú–ï–ù–ù–û–ï –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï RLS –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...');
  console.log('üö® –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ù–ï —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞!');
  
  try {
    const serviceClient = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
    );
    
    console.log('üìã –®–∞–≥ 1: –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–∫–ª—é—á–µ–Ω–∏—è RLS');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã
    const { data: currentData, error: currentError } = await serviceClient
      .from('books')
      .select('id')
      .limit(1);
    
    if (currentError) {
      console.log('‚ùå –¢–µ–∫—É—â–∏–π –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ books –æ–≥—Ä–∞–Ω–∏—á–µ–Ω:', currentError.message);
    } else {
      console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ books –µ—Å—Ç—å');
    }
    
    console.log('\nüìã –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–µ–π—à—É—é RLS –ø–æ–ª–∏—Ç–∏–∫—É "—Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å—ë"');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É —á–µ—Ä–µ–∑ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    const { data: functionResult, error: functionError } = await serviceClient
      .rpc('create_permissive_policy');
    
    if (functionError) {
      console.log('‚ùå –§—É–Ω–∫—Ü–∏—è create_permissive_policy –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', functionError.message);
      console.log('üí° –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏...');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–∏—Ç–∏–∫
      const testBook = {
        title: '–¢–µ—Å—Ç RLS –ø–æ–ª–∏—Ç–∏–∫',
        description: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ RLS',
        grade_level: '1',
        course: '–¢–µ—Å—Ç',
        category: '–¢–µ—Å—Ç',
        status: 'Moderation',
        author_id: 'test-author-id',
        base_url: 'test-url'
      };
      
      const { data: insertResult, error: insertError } = await serviceClient
        .from('books')
        .insert(testBook)
        .select();
      
      if (insertError) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å:', insertError.message);
        console.log('üîç –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å RLS –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏');
      } else {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞:', insertResult[0]?.id);
        
        // –£–¥–∞–ª–∏–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        await serviceClient
          .from('books')
          .delete()
          .eq('id', insertResult[0].id);
        console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞');
      }
    } else {
      console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è create_permissive_policy –≤—ã–ø–æ–ª–Ω–µ–Ω–∞:', functionResult);
    }
    
    console.log('\nüìã –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    
    const anonClient = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    );
    
    // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    const { data: moderators, error: modError } = await serviceClient
      .from('users')
      .select('id, email, role')
      .eq('role', 'moderator')
      .limit(1);
    
    if (modError || !moderators || moderators.length === 0) {
      console.log('‚ùå –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const moderator = moderators[0];
    console.log('üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º:', moderator.email);
    
    // –í—Ö–æ–¥–∏–º –∫–∞–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
    const { data: authData, error: authError } = await anonClient.auth.signInWithPassword({
      email: moderator.email,
      password: 'TestPassword123'
    });
    
    if (authError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', authError.message);
      return;
    }
    
    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø
    const { data: booksData, error: booksError } = await anonClient
      .from('books')
      .select('id, title, status')
      .eq('status', 'Moderation');
    
    if (booksError) {
      console.log('‚ùå –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –≤—Å–µ –µ—â–µ –Ω–µ –≤–∏–¥–∏—Ç –∫–Ω–∏–≥–∏:', booksError.message);
      console.log('üìã –ö–æ–¥ –æ—à–∏–±–∫–∏:', booksError.code);
      console.log('üìã –î–µ—Ç–∞–ª–∏:', booksError.details);
      console.log('üìã –ü–æ–¥—Å–∫–∞–∑–∫–∞:', booksError.hint);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞
      const { data: allBooksData, error: allBooksError } = await anonClient
        .from('books')
        .select('id, title, status');
      
      if (allBooksError) {
        console.log('‚ùå –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:', allBooksError.message);
      } else {
        console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –µ—Å—Ç—å, –Ω–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏. –í–∏–¥–Ω–æ –∫–Ω–∏–≥:', allBooksData?.length || 0);
      }
      
    } else {
      console.log('üéâ –£–°–ü–ï–•! –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç –∫–Ω–∏–≥–∏:', booksData?.length || 0);
      
      if (booksData && booksData.length > 0) {
        console.log('üìö –ö–Ω–∏–≥–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:');
        booksData.slice(0, 3).forEach((book, index) => {
          console.log(`   ${index + 1}. "${book.title}"`);
        });
      }
    }
    
    await anonClient.auth.signOut();
    
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞, –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É Supabase');
    console.log('2. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å RLS –ø–æ–ª–∏—Ç–∏–∫–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Supabase');
    console.log('3. –ò–ª–∏ —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Supabase CLI');
    console.log('4. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SERVICE_ROLE –∫–ª—é—á –≤ production (–ù–ï —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', error instanceof Error ? error.message : String(error));
  }
}

// –°–æ–∑–¥–∞–¥–∏–º —Ç–∞–∫–∂–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
async function createPermissivePolicy() {
  console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–∞—é—â–µ–π –ø–æ–ª–∏—Ç–∏–∫–∏...');
  
  try {
    const serviceClient = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
    );
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const functionSQL = `
      CREATE OR REPLACE FUNCTION create_permissive_book_policy()
      RETURNS text
      LANGUAGE plpgsql
      SECURITY DEFINER
      AS $$
      BEGIN
        -- –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è books
        DROP POLICY IF EXISTS "allow_all_books" ON books;
        DROP POLICY IF EXISTS "books_select_policy" ON books;
        DROP POLICY IF EXISTS "moderators_see_moderation" ON books;
        DROP POLICY IF EXISTS "authors_see_own" ON books;
        DROP POLICY IF EXISTS "users_see_active" ON books;
        
        -- –°–æ–∑–¥–∞–µ–º —Ä–∞–∑—Ä–µ—à–∞—é—â—É—é –ø–æ–ª–∏—Ç–∏–∫—É
        CREATE POLICY "allow_all_books" ON books FOR ALL USING (true);
        
        RETURN '–†–∞–∑—Ä–µ—à–∞—é—â–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞';
      EXCEPTION
        WHEN OTHERS THEN
          RETURN '–û—à–∏–±–∫–∞: ' || SQLERRM;
      END;
      $$;
    `;
    
    const { data: createFuncResult, error: createFuncError } = await serviceClient
      .rpc('exec_sql', { sql: functionSQL });
    
    if (createFuncError) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é:', createFuncError.message);
    } else {
      console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º...');
      
      const { data: execResult, error: execError } = await serviceClient
        .rpc('create_permissive_book_policy');
      
      if (execError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏:', execError.message);
      } else {
        console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:', execResult);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏:', error instanceof Error ? error.message : String(error));
  }
}

temporaryDisableRLS(); 
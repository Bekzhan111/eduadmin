const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

async function testAuthLogout() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...');
  
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
  );
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
    console.log('\nüìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏');
    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', sessionError.message);
      return;
    }
    
    if (!sessionData.session) {
      console.log('‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏');
      return;
    }
    
    console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', sessionData.session.user.email);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìã –®–∞–≥ 2: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    try {
      const { data: userData, error: userError } = await supabase
        .from('users')
        .select('role, email, display_name')
        .eq('id', sessionData.session.user.id)
        .maybeSingle();
      
      if (userError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', userError.message);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–µ—Ç–µ–≤–æ–π –æ—à–∏–±–∫–æ–π
        if (userError.message.includes('Load failed')) {
          console.log('üåê –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ "Load failed"');
          console.log('üí° –≠—Ç–æ –æ–±—ã—á–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Å–µ—Ç—å—é –∏–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤—ã—Ö–æ–¥–∞');
        }
      } else if (userData) {
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω:', {
          role: userData.role,
          email: userData.email,
          display_name: userData.display_name
        });
      } else {
        console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users');
      }
    } catch (networkError) {
      console.log('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', networkError.message);
      console.log('üí° –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–æ –≤—Ä–µ–º—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    }
    
    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    console.log('\nüìã –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    try {
      const { error: signOutError } = await supabase.auth.signOut();
      
      if (signOutError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', signOutError.message);
      } else {
        console.log('‚úÖ –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      }
    } catch (signOutNetworkError) {
      console.log('‚ö†Ô∏è –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', signOutNetworkError.message);
      console.log('üí° –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ —Ä–∞–≤–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—á–∏—â–µ–Ω–æ');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
    console.log('\nüìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞');
    const { data: postLogoutSession } = await supabase.auth.getSession();
    
    if (postLogoutSession.session) {
      console.log('‚ö†Ô∏è –°–µ—Å—Å–∏—è –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω–∞ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞');
    } else {
      console.log('‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('   - –û—à–∏–±–∫–∏ "Load failed" –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ');
    console.log('   - –í–∞–∂–Ω–æ –æ—á–∏—â–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫');
    console.log('   - –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ /login –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤—Å–µ–≥–¥–∞');
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

testAuthLogout(); 
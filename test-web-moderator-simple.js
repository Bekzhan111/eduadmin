require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

async function testWebModeratorSimple() {
  console.log('üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const supabase = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    );
    
    console.log('üìã –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—Å–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º userProfile –∫–∞–∫ –µ—Å–ª–∏ –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    const userProfile = {
      role: 'moderator',
      id: 'c0c8bf1b-c5b5-4f1d-80a3-c20ac3a3fefe' // ID –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
    };
    
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω:', userProfile.role);
    
    console.log('üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º fetchBooksWithCorrectClient (–Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è)');
    
    // JavaScript –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–∫–∞–∫ –≤ –Ω–∞—à–µ–º utils —Ñ–∞–π–ª–µ)
    const createAdminClient = () => {
      return createClient(
        process.env.NEXT_PUBLIC_SUPABASE_URL,
        process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
      );
    };
    
    const shouldUseAdminClient = (role) => role === 'moderator';
    
    const fetchBooksWithCorrectClient = async (role, userId, fallbackClient) => {
      const useAdmin = shouldUseAdminClient(role);
      const client = useAdmin ? createAdminClient() : fallbackClient;
      
      console.log(`üîë Using ${useAdmin ? 'ADMIN' : 'REGULAR'} client for role: ${role}`);
      
      let query = client
        .from('books')
        .select(`
          id,
          base_url,
          title,
          description,
          grade_level,
          course,
          category,
          status,
          author_id,
          moderator_id,
          created_at,
          updated_at,
          price,
          cover_image
        `);
      
      if (role === 'moderator') {
        query = query.eq('status', 'Moderation');
        console.log('üë®‚Äçüíº Moderator filter applied: status = Moderation');
      }
      
      console.log('üöÄ Executing query...');
      const result = await query.order('created_at', { ascending: false });
      console.log(`üìä Query result: ${result.data?.length || 0} books found${result.error ? ` (Error: ${result.error.message})` : ''}`);
      
      return result;
    };
    
    const { data: booksData, error: booksError } = await fetchBooksWithCorrectClient(
      userProfile.role,
      userProfile.id,
      supabase
    );
    
    if (booksError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥:', booksError.message);
    } else {
      console.log('‚úÖ –ö–Ω–∏–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã:', booksData?.length || 0);
      console.log('üìä –ö–Ω–∏–≥–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:');
      booksData?.slice(0, 5).forEach((book, index) => {
        console.log(`   ${index + 1}. ${book.title} (—Å—Ç–∞—Ç—É—Å: ${book.status})`);
      });
      if (booksData && booksData.length > 5) {
        console.log(`   ... –∏ –µ—â–µ ${booksData.length - 5} –∫–Ω–∏–≥`);
      }
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üí° –†–µ—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç ADMIN –∫–ª–∏–µ–Ω—Ç –∏ –≤–∏–¥—è—Ç –∫–Ω–∏–≥–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏');
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

testWebModeratorSimple(); 
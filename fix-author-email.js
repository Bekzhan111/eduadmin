const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
);

async function fixAuthorEmail() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ email –∞–≤—Ç–æ—Ä–∞\n');
  
  try {
    // –ù–∞—Ö–æ–¥–∏–º –∞–≤—Ç–æ—Ä–∞ —Å null email
    const { data: authors, error } = await supabase
      .from('users')
      .select('id, email, role')
      .eq('role', 'author')
      .is('email', null);
      
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ—Ä–∞:', error.message);
      return;
    }
    
    if (!authors || authors.length === 0) {
      console.log('‚ö†Ô∏è –ê–≤—Ç–æ—Ä—ã —Å null email –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    const author = authors[0];
    console.log(`üë§ –ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ—Ä —Å ID: ${author.id}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º email
    const newEmail = 'test-author-fixed@example.com';
    const { error: updateError } = await supabase
      .from('users')
      .update({ email: newEmail })
      .eq('id', author.id);
      
    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è email:', updateError.message);
      return;
    }
    
    console.log(`‚úÖ Email –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: ${newEmail}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const { data: updatedAuthor, error: checkError } = await supabase
      .from('users')
      .select('id, email, role')
      .eq('id', author.id)
      .single();
      
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', checkError.message);
    } else {
      console.log('\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞:');
      console.log(`   ID: ${updatedAuthor.id}`);
      console.log(`   Email: ${updatedAuthor.email}`);
      console.log(`   –†–æ–ª—å: ${updatedAuthor.role}`);
      
      console.log('\nüéØ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
      console.log(`   Email: ${updatedAuthor.email}`);
      console.log(`   Password: TestPassword123!`);
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

fixAuthorEmail(); 
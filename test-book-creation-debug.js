require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

async function debugBookCreation() {
  console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏ –∞–≤—Ç–æ—Ä–æ–º...');
  
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
  );
  
  try {
    // 1. –ù–∞–π–¥–µ–º –∞–≤—Ç–æ—Ä–∞
    console.log('üìã –®–∞–≥ 1: –ü–æ–∏—Å–∫ –∞–≤—Ç–æ—Ä–∞');
    const { data: authors, error: authorsError } = await supabase
      .from('users')
      .select('id, email, role')
      .eq('role', 'author')
      .limit(1);
    
    if (authorsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ—Ä–æ–≤:', authorsError.message);
      return;
    }
    
    if (!authors || authors.length === 0) {
      console.log('‚ùå –ê–≤—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    const testAuthor = authors[0];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ—Ä: ${testAuthor.email} (ID: ${testAuthor.id})`);
    
    // 2. –°–æ–∑–¥–∞–¥–∏–º –∫–Ω–∏–≥—É –∫–∞–∫ –≤ —Ñ–æ—Ä–º–µ
    console.log('\nüìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ (—Å–∏–º—É–ª—è—Ü–∏—è —Ñ–æ—Ä–º—ã)');
    const bookData = {
      title: `–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –æ—Ç –∞–≤—Ç–æ—Ä–∞ ${Date.now()}`,
      description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–∏–≥–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —á–µ—Ä–µ–∑ —Å–∏–º—É–ª—è—Ü–∏—é —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è',
      grade_level: '6',
      course: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      category: '–£—á–µ–±–Ω–∏–∫',
      language: '–†—É—Å—Å–∫–∏–π',
      pages_count: 120,
      price: 2500,
      cover_image: null,
      base_url: `test-book-${Date.now()}`,
      author_id: testAuthor.id,
      status: 'Moderation' // –ö–∞–∫ –≤ —Ñ–æ—Ä–º–µ
    };
    
    console.log('üìù –î–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏:', JSON.stringify(bookData, null, 2));
    
    const { data: book, error: bookError } = await supabase
      .from('books')
      .insert(bookData)
      .select()
      .single();
    
    if (bookError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏:', bookError.message);
      console.log('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', JSON.stringify(bookError, null, 2));
      return;
    }
    
    console.log('‚úÖ –ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìñ –î–µ—Ç–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∫–Ω–∏–≥–∏:');
    console.log(`   - ID: ${book.id}`);
    console.log(`   - –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
    console.log(`   - –°—Ç–∞—Ç—É—Å: ${book.status}`);
    console.log(`   - –ê–≤—Ç–æ—Ä ID: ${book.author_id}`);
    console.log(`   - –°–æ–∑–¥–∞–Ω–∞: ${book.created_at}`);
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∏–º, –≤–∏–¥—è—Ç –ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —ç—Ç—É –∫–Ω–∏–≥—É
    console.log('\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏');
    
    const { data: moderators, error: modError } = await supabase
      .from('users')
      .select('id, email, role')
      .eq('role', 'moderator');
    
    if (modError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:', modError.message);
      return;
    }
    
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤: ${moderators.length}`);
    moderators.forEach((mod, index) => {
      console.log(`   ${index + 1}. ${mod.email} (ID: ${mod.id})`);
    });
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –∫–Ω–∏–≥–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    console.log('\nüìã –®–∞–≥ 4: –í—Å–µ –∫–Ω–∏–≥–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏');
    const { data: moderationBooks, error: modBooksError } = await supabase
      .from('books')
      .select('id, title, status, author_id, created_at')
      .eq('status', 'Moderation')
      .order('created_at', { ascending: false });
    
    if (modBooksError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', modBooksError.message);
      return;
    }
    
    console.log(`üìö –ö–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: ${moderationBooks.length}`);
    moderationBooks.forEach((book, index) => {
      console.log(`   ${index + 1}. "${book.title}"`);
      console.log(`      - ID: ${book.id}`);
      console.log(`      - –°—Ç–∞—Ç—É—Å: ${book.status}`);
      console.log(`      - –ê–≤—Ç–æ—Ä: ${book.author_id}`);
      console.log(`      - –°–æ–∑–¥–∞–Ω–∞: ${new Date(book.created_at).toLocaleDateString('ru-RU')}`);
    });
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
    console.log('\nüìã –®–∞–≥ 5: –ó–∞–ø—Ä–æ—Å –∫–∞–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞');
    const { data: uiBooks, error: uiError } = await supabase
      .from('books')
      .select(`
        id,
        base_url,
        title,
        description,
        grade_level,
        course,
        category,
        status,
        author_id,
        moderator_id,
        created_at,
        updated_at,
        price,
        schools_purchased,
        schools_added,
        teachers_added,
        students_added
      `)
      .eq('status', 'Moderation')
      .order('created_at', { ascending: false });
    
    if (uiError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ UI –∑–∞–ø—Ä–æ—Å–∞:', uiError.message);
      return;
    }
    
    console.log(`üñ•Ô∏è –ö–Ω–∏–≥ –≤ UI –∑–∞–ø—Ä–æ—Å–µ: ${uiBooks.length}`);
    uiBooks.forEach((book, index) => {
      console.log(`   ${index + 1}. "${book.title}" (–°—Ç–∞—Ç—É—Å: ${book.status})`);
    });
    
    // 6. –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã books
    console.log('\nüìã –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã');
    const { data: tableInfo, error: tableError } = await supabase
      .from('books')
      .select('id')
      .limit(1);
    
    if (tableError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ books:', tableError.message);
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ books –¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    
    // 7. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
    console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
    if (moderationBooks.length > 0) {
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–Ω–∏–≥–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∏ –ø–æ–ø–∞–¥–∞—é—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é');
      console.log(`üìä –í—Å–µ–≥–æ –∫–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: ${moderationBooks.length}`);
      console.log('üí° –ï—Å–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –≤–∏–¥—è—Ç –∫–Ω–∏–≥–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ:');
      console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ä–æ–ª–∏ –≤ –∫–æ–¥–µ');
      console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã books');
      console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ DevTools');
    } else {
      console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞: –∫–Ω–∏–≥–∏ –Ω–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Å—Ç–∞—Ç—É—Å Moderation');
      console.log('üîç –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:');
      console.log('   1. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ books');
      console.log('   2. RLS –ø–æ–ª–∏—Ç–∏–∫–∏');
      console.log('   3. –§–∏–ª—å—Ç—Ä—ã –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error instanceof Error ? error.message : String(error));
  }
}

debugBookCreation(); 
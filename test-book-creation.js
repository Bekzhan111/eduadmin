const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

async function testBookCreation() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é...');
  
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
  );
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
    console.log('üìã –®–∞–≥ 1: –ü–æ–∏—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–≤—Ç–æ—Ä–∞');
    const { data: authors, error: authorsError } = await supabase
      .from('users')
      .select('id, email, role')
      .eq('role', 'author')
      .limit(1);
    
    if (authorsError) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ—Ä–æ–≤: ${authorsError.message}`);
    }
    
    if (!authors || authors.length === 0) {
      console.log('‚ö†Ô∏è –ê–≤—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    const testAuthor = authors[0];
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ—Ä:', testAuthor.email, 'ID:', testAuthor.id);
    
    // 2. –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∫–Ω–∏–≥—É
    console.log('üìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–∏–≥–∏');
    const testBook = {
      title: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏',
      description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–∏–≥–∏',
      grade_level: '5',
      course: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      category: '–£—á–µ–±–Ω–∏–∫',
      language: '–†—É—Å—Å–∫–∏–π',
      pages_count: 150,
      price: 2500, // –¶–µ–ª–æ–µ —á–∏—Å–ª–æ
      base_url: 'test-math-book-' + Date.now(),
      author_id: testAuthor.id,
      status: 'Moderation'
    };
    
    const { data: book, error: bookError } = await supabase
      .from('books')
      .insert(testBook)
      .select()
      .single();
    
    if (bookError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏:', bookError.message);
      console.log('üìä –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', JSON.stringify(bookError, null, 2));
      return;
    }
    
    console.log('‚úÖ –ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ:', book.title);
    console.log('üìä ID –∫–Ω–∏–≥–∏:', book.id);
    console.log('üìä –°—Ç–∞—Ç—É—Å:', book.status);
    console.log('üìä –¶–µ–Ω–∞:', book.price, '—Ç–∏–ø:', typeof book.price);
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
    console.log('\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤');
    const { data: moderators, error: modError } = await supabase
      .from('users')
      .select('id, email, role')
      .eq('role', 'moderator');
    
    if (modError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:', modError.message);
    } else {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:', moderators.length);
      moderators.forEach(mod => {
        console.log('  - –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', mod.email, 'ID:', mod.id);
      });
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–∏–≥–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
    console.log('\nüìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é');
    const { data: moderationBooks, error: modBooksError } = await supabase
      .from('books')
      .select('id, title, status, author_id, price')
      .eq('status', 'Moderation');
    
    if (modBooksError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é:', modBooksError.message);
    } else {
      console.log('‚úÖ –ö–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', moderationBooks.length);
      moderationBooks.forEach(book => {
        console.log(`  - ${book.title} (ID: ${book.id}, –¶–µ–Ω–∞: ${book.price}, –ê–≤—Ç–æ—Ä: ${book.author_id})`);
      });
    }
    
    // 5. –¢–µ—Å—Ç —Å –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–æ–π —Ü–µ–Ω–æ–π
    console.log('\nüìã –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–æ–π —Ü–µ–Ω—ã (4999.89)');
    const problematicBook = {
      title: '–ö–Ω–∏–≥–∞ —Å –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–æ–π —Ü–µ–Ω–æ–π',
      description: '–¢–µ—Å—Ç –æ—à–∏–±–∫–∏ —Å —Ü–µ–Ω–æ–π',
      grade_level: '6',
      course: '–§–∏–∑–∏–∫–∞',
      category: '–£—á–µ–±–Ω–∏–∫',
      language: '–†—É—Å—Å–∫–∏–π',
      pages_count: 200,
      price: 4999.89, // –ü—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–∞—è —Ü–µ–Ω–∞
      base_url: 'problematic-price-book-' + Date.now(),
      author_id: testAuthor.id,
      status: 'Draft'
    };
    
    const { data: badBook, error: badBookError } = await supabase
      .from('books')
      .insert(problematicBook)
      .select()
      .single();
    
    if (badBookError) {
      console.log('‚ùå –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ —Å —Ü–µ–Ω–æ–π:', badBookError.message);
      if (badBookError.message.includes('invalid input syntax for type integer')) {
        console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–∏–ø–æ–º –¥–∞–Ω–Ω—ã—Ö price');
      }
    } else {
      console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –∫–Ω–∏–≥–∞ —Å –¥—Ä–æ–±–Ω–æ–π —Ü–µ–Ω–æ–π —Å–æ–∑–¥–∞–Ω–∞:', badBook.price);
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

testBookCreation(); 
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

// Create clients
const serviceClient = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
);

const normalClient = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
);

async function testBookApprovalWorkflow() {
  console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º workflow –æ–¥–æ–±—Ä–µ–Ω–∏—è –∫–Ω–∏–≥...');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    const { data: users, error: usersError } = await serviceClient
      .from('users')
      .select('id, email, role')
      .order('created_at', { ascending: false });
    
    if (usersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersError.message);
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    
    const authors = users.filter(u => u.role === 'author');
    const moderators = users.filter(u => u.role === 'moderator');
    const superAdmins = users.filter(u => u.role === 'super_admin');
    
    console.log(`   - –ê–≤—Ç–æ—Ä—ã: ${authors.length}`);
    console.log(`   - –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã: ${moderators.length}`);
    console.log(`   - –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω—ã: ${superAdmins.length}`);
    
    authors.forEach(author => console.log(`     üìù –ê–≤—Ç–æ—Ä: ${author.email}`));
    moderators.forEach(mod => console.log(`     üë®‚Äçüíº –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: ${mod.email}`));
    superAdmins.forEach(admin => console.log(`     üëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω: ${admin.email}`));
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–∏–≥–∏ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    console.log('\nüìã –®–∞–≥ 2: –ê–Ω–∞–ª–∏–∑ –∫–Ω–∏–≥ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º');
    const { data: books, error: booksError } = await serviceClient
      .from('books')
      .select('id, title, status, author_id, moderator_id, created_at')
      .order('created_at', { ascending: false });
    
    if (booksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥:', booksError.message);
      return;
    }
    
    console.log(`‚úÖ –í—Å–µ–≥–æ –∫–Ω–∏–≥: ${books.length}`);
    
    const statusCounts = {
      'Draft': books.filter(b => b.status === 'Draft').length,
      'Moderation': books.filter(b => b.status === 'Moderation').length,
      'Approved': books.filter(b => b.status === 'Approved').length,
      'Active': books.filter(b => b.status === 'Active').length,
    };
    
    console.log('üìä –°—Ç–∞—Ç—É—Å—ã –∫–Ω–∏–≥:');
    Object.entries(statusCounts).forEach(([status, count]) => {
      console.log(`   - ${status}: ${count} –∫–Ω–∏–≥`);
    });
    
    // 3. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥
    const approvedBooks = books.filter(b => b.status === 'Approved');
    console.log('\nüìã –®–∞–≥ 3: –ê–Ω–∞–ª–∏–∑ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥');
    console.log(`üîç –ö–Ω–∏–≥ –≤ —Å—Ç–∞—Ç—É—Å–µ "Approved": ${approvedBooks.length}`);
    
    if (approvedBooks.length > 0) {
      console.log('üìö –î–µ—Ç–∞–ª–∏ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥:');
      approvedBooks.forEach((book, index) => {
        console.log(`   ${index + 1}. "${book.title}"`);
        console.log(`      - ID: ${book.id}`);
        console.log(`      - –°—Ç–∞—Ç—É—Å: ${book.status}`);
        console.log(`      - –ê–≤—Ç–æ—Ä ID: ${book.author_id}`);
        console.log(`      - –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä ID: ${book.moderator_id || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`      - –°–æ–∑–¥–∞–Ω–∞: ${new Date(book.created_at).toLocaleDateString('ru-RU')}`);
      });
      
      console.log('\nüí° –≠—Ç–∏ –∫–Ω–∏–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω—É –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!');
    } else {
      console.log('‚ÑπÔ∏è –ù–µ—Ç –∫–Ω–∏–≥ –≤ —Å—Ç–∞—Ç—É—Å–µ "Approved" - –Ω–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –∫–Ω–∏–≥');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–∏–¥–∏—Ç —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    console.log('\nüìã –®–∞–≥ 4: –ß—Ç–æ –≤–∏–¥–∏—Ç —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω');
    if (superAdmins.length > 0) {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ fetchBooksWithCorrectClient –ª–æ–≥–∏–∫—É
      console.log('üëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –í–°–ï –∫–Ω–∏–≥–∏ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤');
      
      const superAdminBooks = books; // –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –≤–∏–¥–∏—Ç –≤—Å–µ
      console.log(`‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –≤–∏–¥–∏—Ç: ${superAdminBooks.length} –∫–Ω–∏–≥`);
      
      const readyForPublication = superAdminBooks.filter(b => b.status === 'Approved');
      console.log(`üìã –ì–æ—Ç–æ–≤—ã –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${readyForPublication.length} –∫–Ω–∏–≥`);
      
      if (readyForPublication.length > 0) {
        console.log('üéØ –≠—Ç–∏ –∫–Ω–∏–≥–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å:');
        readyForPublication.forEach((book, index) => {
          console.log(`   ${index + 1}. "${book.title}" (–æ–¥–æ–±—Ä–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º)`);
        });
      }
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ');
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–∏–¥–∏—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
    console.log('\nüìã –®–∞–≥ 5: –ß—Ç–æ –≤–∏–¥–∏—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä');
    if (moderators.length > 0) {
      console.log('üë®‚Äçüíº –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –∫–Ω–∏–≥–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "Moderation"');
      
      const moderationBooks = books.filter(b => b.status === 'Moderation');
      console.log(`‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç: ${moderationBooks.length} –∫–Ω–∏–≥ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏`);
      
      if (moderationBooks.length > 0) {
        console.log('üìã –ö–Ω–∏–≥–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:');
        moderationBooks.forEach((book, index) => {
          console.log(`   ${index + 1}. "${book.title}"`);
        });
      }
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ');
    }
    
    // 6. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
    
    if (approvedBooks.length === 0) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –∫–Ω–∏–≥ –≤ —Å—Ç–∞—Ç—É—Å–µ "Approved"');
      console.log('üí° –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ:');
      console.log('   1. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –µ—â–µ –Ω–µ –æ–¥–æ–±—Ä–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –∫–Ω–∏–≥–∏, –ò–õ–ò');
      console.log('   2. –û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å—Ç–∞—Ç—É—Å "Approved", –ò–õ–ò');
      console.log('   3. –í handleApproveBook –µ—Å—Ç—å –æ—à–∏–±–∫–∞');
    } else {
      console.log('‚úÖ –ï—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ - workflow —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log(`üìä ${approvedBooks.length} –∫–Ω–∏–≥ –æ–∂–∏–¥–∞—é—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–º`);
    }
    
    console.log('\nüìã Workflow –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫:');
    console.log('1. –ê–≤—Ç–æ—Ä —Å–æ–∑–¥–∞–µ—Ç –∫–Ω–∏–≥—É ‚Üí —Å—Ç–∞—Ç—É—Å "Draft"');
    console.log('2. –ê–≤—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é ‚Üí —Å—Ç–∞—Ç—É—Å "Moderation"');
    console.log('3. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –æ–¥–æ–±—Ä—è–µ—Ç ‚Üí —Å—Ç–∞—Ç—É—Å "Approved" + moderator_id');
    console.log('4. –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –ø—É–±–ª–∏–∫—É–µ—Ç ‚Üí —Å—Ç–∞—Ç—É—Å "Active"');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBookApprovalWorkflow(); 
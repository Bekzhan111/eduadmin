const { createClient } = require('@supabase/supabase-js');

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.local
const supabaseUrl = 'https://wxrqdytayiamnpwjauvi.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind4cnFkeXRheWlhbW5wd2phdXZpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0Nzc0MzQxOCwiZXhwIjoyMDYzMzE5NDE4fQ.oLcBI0WFeFwB5HtMAJz8c60BuQYDKVfkql3_-ranFFE';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkBookUrls() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º base_url –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–∏–≥...');
  
  const { data: books, error } = await supabase
    .from('books')
    .select('id, title, base_url, status')
    .eq('status', 'Active')
    .order('created_at', { ascending: false });
    
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–Ω–∏–≥:', error);
    return;
  }
  
  console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${books?.length || 0} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–∏–≥:`);
  console.log('');
  
  books?.forEach((book, index) => {
    console.log(`${index + 1}. "${book.title}"`);
    console.log(`   ID: ${book.id}`);
    console.log(`   base_url: "${book.base_url}"`);
    console.log(`   –°—Å—ã–ª–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è: /read/${book.base_url}`);
    console.log('');
  });
  
  // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–Ω–∏–≥—É –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
  const testUrl = 'test-book-1748884702744-copy-1748982457209';
  console.log(`üîç –ò—â–µ–º –∫–Ω–∏–≥—É —Å base_url: "${testUrl}"`);
  
  const { data: specificBook, error: specificError } = await supabase
    .from('books')
    .select('id, title, base_url, status')
    .eq('base_url', testUrl)
    .single();
    
  if (specificError) {
    console.log(`‚ùå –ö–Ω–∏–≥–∞ —Å base_url "${testUrl}" –ù–ï –ù–ê–ô–î–ï–ù–ê`);
    console.log('   –û—à–∏–±–∫–∞:', specificError.message);
  } else {
    console.log(`‚úÖ –ö–Ω–∏–≥–∞ –Ω–∞–π–¥–µ–Ω–∞: "${specificBook.title}"`);
  }
}

checkBookUrls().catch(console.error); 
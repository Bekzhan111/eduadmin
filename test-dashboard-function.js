const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SERVICE_ROLE_KEY
);

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_dashboard_summary\n');

async function testDashboardFunction() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('id, email, role')
      .order('role, created_at');

    if (usersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersError.message);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users?.length || 0}\n`);

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ä–æ–ª—è–º
    const usersByRole = {};
    users?.forEach(user => {
      if (!usersByRole[user.role]) {
        usersByRole[user.role] = [];
      }
      usersByRole[user.role].push(user);
    });

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
    for (const [role, roleUsers] of Object.entries(usersByRole)) {
      console.log(`üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–∏: ${role.toUpperCase()}`);
      
      if (roleUsers.length === 0) {
        console.log('  ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —ç—Ç–æ–π —Ä–æ–ª—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n');
        continue;
      }

      // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏
      const testUser = roleUsers[0];
      console.log(`  üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${testUser.email} (${testUser.id})`);

      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
      const { data: result, error } = await supabase.rpc('get_dashboard_summary', {
        user_id: testUser.id
      });

      if (error) {
        console.error(`  ‚ùå –û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏:`, error.message);
      } else {
        console.log(`  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏:`);
        console.log(`     –†–æ–ª—å –≤ –æ—Ç–≤–µ—Ç–µ: ${result?.role || '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–ê'}`);
        console.log(`     –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${testUser.role}`);
        console.log(`     –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${result?.role === testUser.role ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
        
        if (result?.school_name) {
          console.log(`     –®–∫–æ–ª–∞: ${result.school_name}`);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if (result?.book_stats) {
          console.log(`     –ö–Ω–∏–≥–∏: ${JSON.stringify(result.book_stats)}`);
        }
        if (result?.key_stats) {
          console.log(`     –ö–ª—é—á–∏: ${JSON.stringify(result.key_stats)}`);
        }
        if (result?.teacher_count !== undefined) {
          console.log(`     –£—á–∏—Ç–µ–ª–µ–π: ${result.teacher_count}`);
        }
        if (result?.student_count !== undefined) {
          console.log(`     –°—Ç—É–¥–µ–Ω—Ç–æ–≤: ${result.student_count}`);
        }
      }
      console.log('');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∞–≤—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
    const authors = usersByRole['author'];
    if (authors && authors.length > 0) {
      console.log('üéØ –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ê–í–¢–û–†–ê:');
      const author = authors[0];
      
      const { data: result, error } = await supabase.rpc('get_dashboard_summary', {
        user_id: author.id
      });

      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∞:', error.message);
      } else {
        console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∞:');
        console.log(`   Email: ${author.email}`);
        console.log(`   ID: ${author.id}`);
        console.log(`   –†–æ–ª—å –≤ –ë–î: ${author.role}`);
        console.log(`   –†–æ–ª—å –≤ –æ—Ç–≤–µ—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏: ${result?.role}`);
        console.log(`   –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏: ${result?.role === 'author' ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
        
        if (result?.role !== 'author') {
          console.log('üö® –ü–†–û–ë–õ–ï–ú–ê: –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–æ–ª—å!');
          console.log('   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏:', JSON.stringify(result, null, 2));
        }
      }
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testDashboardFunction(); 